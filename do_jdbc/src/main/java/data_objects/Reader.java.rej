*************** import data_objects.util.JDBCUtil;
*** 31,41 ****
  public class Reader extends DORubyObject {
  
      public final static String RUBY_CLASS_NAME = "Reader";
-     private ResultSet resultSet;
-     private List<String> fieldNames;
-     private List<RubyType> fieldTypes;
-     private int fieldCount;
-     private boolean opened = false;
  
      private final static ObjectAllocator READER_ALLOCATOR = new ObjectAllocator() {
  
--- 31,46 ----
  public class Reader extends DORubyObject {
  
      public final static String RUBY_CLASS_NAME = "Reader";
+     ResultSet resultSet;
+     List<String> fieldNames;
+     List<RubyType> fieldTypes;
+     int fieldCount;
+     boolean opened = false;
+     RubyArray values;
+ 
+     private final IRubyObject TRUE;
+     private final IRubyObject FALSE;
+     private final IRubyObject NIL;
  
      private final static ObjectAllocator READER_ALLOCATOR = new ObjectAllocator() {
  
*************** public class Reader extends DORubyObject {
*** 70,75 ****
       */
      private Reader(Ruby runtime, RubyClass klass) {
          super(runtime, klass);
      }
  
      // -------------------------------------------------- DATAOBJECTS PUBLIC API
--- 75,83 ----
       */
      private Reader(Ruby runtime, RubyClass klass) {
          super(runtime, klass);
+         TRUE = runtime.getTrue();
+         FALSE = runtime.getFalse();
+         NIL = runtime.getNil();
      }
  
      // -------------------------------------------------- DATAOBJECTS PUBLIC API
*************** public class Reader extends DORubyObject {
*** 82,96 ****
       */
      @JRubyMethod
      public IRubyObject close() {
-         Ruby runtime = getRuntime();
- 
          if (resultSet != null) {
              JDBCUtil.close(resultSet);
              resultSet = null;
              opened = false;
-             return runtime.getTrue();
          } else {
-             return runtime.getFalse();
          }
      }
  
--- 90,102 ----
       */
      @JRubyMethod
      public IRubyObject close() {
          if (resultSet != null) {
              JDBCUtil.close(resultSet);
              resultSet = null;
              opened = false;
+             return TRUE;
          } else {
+             return FALSE;
          }
      }
  
*************** public class Reader extends DORubyObject {
*** 103,138 ****
      public IRubyObject next() {
          Ruby runtime = getRuntime();
          try {
-             ResultSet rs = resultSet;
- 
-             if (rs == null) {
-                 return runtime.getFalse();
              }
  
-             RubyArray row = runtime.newArray();
-             IRubyObject value;
-             int fieldTypesCount = fieldTypes.size();
  
              try {
-                 opened = rs.next();
  
                  if (!opened) {
-                     return runtime.getFalse();
                  }
- 
-                 for (int i = 0; i < fieldCount; i++) {
-                     RubyType type = fieldTypes.get(i);
-                     value = driver.getTypecastResultSetValue(runtime, rs, i + 1, type);
-                     row.push_m(new IRubyObject[] { value });
                  }
              } catch (SQLException sqe) {
                  throw driver.newDriverError(runtime, sqe);
              } catch (IOException ioe) {
                  throw driver.newDriverError(runtime, ioe.getLocalizedMessage());
              }
  
-             api.setInstanceVariable(this, "@values", row);
-             return runtime.getTrue();
          } catch (RuntimeException e) {
              e.printStackTrace();
              throw driver.newDriverError(runtime, e.getMessage());
--- 109,140 ----
      public IRubyObject next() {
          Ruby runtime = getRuntime();
          try {
+             if (resultSet == null) {
+                 return FALSE;
              }
  
+             values = runtime.newArray(fieldTypes.size());
  
              try {
+                 opened = resultSet.next();
  
                  if (!opened) {
+                     return FALSE;
                  }
+                 int i = 1;
+                 for(RubyType type: fieldTypes){
+                     values.append(driver.getTypecastResultSetValue(runtime, resultSet, i++, type));
                  }
+ 
              } catch (SQLException sqe) {
                  throw driver.newDriverError(runtime, sqe);
              } catch (IOException ioe) {
                  throw driver.newDriverError(runtime, ioe.getLocalizedMessage());
              }
  
+             //TODO needed on ruby side ?
+             //api.setInstanceVariable(this, "@values", values);
+             return TRUE;
          } catch (RuntimeException e) {
              e.printStackTrace();
              throw driver.newDriverError(runtime, e.getMessage());
*************** public class Reader extends DORubyObject {
*** 145,157 ****
       */
      @JRubyMethod
      public IRubyObject values() {
-         Ruby runtime = getRuntime();
- 
          if (!opened) {
-             throw driver.newDriverError(runtime, "Reader is not initialized");
          }
-         IRubyObject values = api.getInstanceVariable(this, "@values");
-         return (values != null) ? values : runtime.getNil();
      }
  
      /**
--- 147,157 ----
       */
      @JRubyMethod
      public IRubyObject values() {
          if (!opened) {
+             throw driver.newDriverError(getRuntime(), "Reader is not initialized");
          }
+ 
+         return values != null ? values : NIL;
      }
  
      /**
*************** public class Reader extends DORubyObject {
*** 160,166 ****
       */
      @JRubyMethod
      public IRubyObject fields() {
-         RubyArray fields = getRuntime().newArray();
          for (String f : fieldNames) {
              fields.append(getRuntime().newString(f));
          }
--- 160,166 ----
       */
      @JRubyMethod
      public IRubyObject fields() {
+         RubyArray fields = getRuntime().newArray(fieldNames.size());
          for (String f : fieldNames) {
              fields.append(getRuntime().newString(f));
          }
*************** public class Reader extends DORubyObject {
*** 204,235 ****
  
      // ------------------------------------------------- PUBLIC JAVA API METHODS
  
-     /**
-      *
-      * @return
-      */
-     public ResultSet getResultSet() {
-         return resultSet;
-     }
- 
-     /**
-      *
-      * @param resultSet
-      */
-     public void setResultset(ResultSet resultSet) {
-         this.resultSet = resultSet;
-     }
- 
-     public void setFields(List<String> fields) {
-         this.fieldNames = fields;
-     }
- 
-     public void setFieldTypes(List<RubyType> fieldTypes) {
-         this.fieldTypes = fieldTypes;
-     }
- 
-     public void setFieldCount(int count) {
-         this.fieldCount = count;
-     }
- 
  }
--- 204,207 ----
  
      // ------------------------------------------------- PUBLIC JAVA API METHODS
  
  }
